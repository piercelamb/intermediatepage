# This is the main configuration file for the application.
# ~~~~~

#Cassandra
# ~~~~~
cassandra.node="52.27.88.225"

# Prismic.io
# ~~~~~

# API endpoint
prismic.api="https://snappyblog.prismic.io/api"

# If specified this token is used for all "guest" requests
# prismic.token="xxx"

# OAuth2 configuration
# prismic.clientId="xxxxxx"
# prismic.clientSecret="xxxxxx"

# Mandrill Key
mandrillKey="NL1Db_9HhMM5Jy4rR5ptwQ"
mandrillSendViaTemplateURL="https://mandrillapp.com/api/1.0/messages/send-template.json"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="1JcL?hd7Sk4<XH^vvMe>d[c:5jNJJ[TdgmfScj1rge3GTwAWRgBJ2;D2LGAbN2JU"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=config.Global

#Akka configuration
# ~~~~
akka.default-dispatcher.fork-join-executor.pool-size-max =64
akka.actor.debug.receive = on

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost/snappybeta"

# Connection Pool settings
db.default.poolInitialSize=10
db.default.poolMaxSize=20
db.default.connectionTimeoutMillis=1000

# scalikejdbc
# ~~~~~

scalikejdbc.global.loggingSQLAndTime.enabled=true
scalikejdbc.global.loggingSQLAndTime.logLevel=debug
scalikejdbc.global.loggingSQLAndTime.warningEnabled=true
scalikejdbc.global.loggingSQLAndTime.warningThresholdMillis=1000
scalikejdbc.global.loggingSQLAndTime.warningLogLevel=warn

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

#akka logs:
akka {
  loglevel="INFO"
  log-config-on-start = off
  actor {
    debug {
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on
      lifecycle = on
      fsm = on
      event-stream = on
    }
  }
  remote {
    # If this is "on", Akka will log all outbound messages at DEBUG level,
    # if off then they are not logged
    log-sent-messages = on
    log-received-messages = on
  }
}

#twitter consumer stuff

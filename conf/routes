# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
#GET /   controllers.Admin.index
GET     /    controllers.Registration.newReg
#GET     /                           controllers.Application.index

# Registration
GET    /register    controllers.Registration.newReg
POST   /register    controllers.Registration.create

# TwitterTest

#GET /twitter controllers.Application.timeline
#GET /auth controllers.Twitter.authenticate()

# Admin

GET /admin  @controllers.Admin.index

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
GET    /about    controllers.Marketing.about
GET    /webjars/*file    controllers.WebJarAssets.at(file)


# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized